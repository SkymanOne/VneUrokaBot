import telebot
from telebot import types
from models_pack import db_access, constants
from token_const import token
from MyLogs import *

bot = telebot.TeleBot(token)


@bot.message_handler(commands=['start'])
@bot.message_handler(func=lambda message: message.text == '–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é‚úÖ')
def main_start(message: types.Message):
    my_log_info(message.from_user, '–Ω–∞—á–∞—Ç–∞ —Ä–∞–±–æ—Ç–∞ —Å –±–æ—Ç–æ–º, –Ω–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ /start –∏–ª–∏ –ì–∞–≤–Ω–æ–µ –º–µ–Ω—é')
    markup = types.ReplyKeyboardMarkup()
    markup.row('–î–æ—Å—Ç—É–ø–Ω—ã–µ –∏–≥—Ä—ãüì≤', '–õ–∏–¥–µ—Ä—ã –ø–æ –∏–≥—Ä–∞–º‚öúÔ∏è')
    markup.row('–°–ø—Ä–∞–≤–∫–∞üåö')
    my_log_info(message.from_user, '–æ—Ç—Ä–∏—Å–æ–≤–∫–∞ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é')
    bot.send_message(message.from_user.id, '–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é —Ç–µ–±—è, ' + message.from_user.first_name
                     + ', —á—Ç–æ –∂–µ–ª–∞–µ—à—å?', reply_markup=markup)


@bot.message_handler(func=lambda message: message.text == '–î–æ—Å—Ç—É–ø–Ω—ã–µ –∏–≥—Ä—ãüì≤')
def aviable_games(message: types.Message):
    my_log_info(message.from_user, '–Ω–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ "–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–Ω–∏–≥–∏"')
    markup = types.ReplyKeyboardMarkup()
    markup.row('–ö–≤–µ—Å—Çüö∏', '–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é‚úÖ')
    bot.send_message(message.from_user.id, '–í–æ—Ç —Ç–µ–±–µ —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∏–≥—Ä:',
                     reply_markup=markup)


@bot.message_handler(func=lambda message: message.text == '–ö–≤–µ—Å—Çüö∏')
def game(message: types.Message):
    my_log_info(message.from_user, '–ù–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ –ö–≤–µ—Å—Ç')
    markup = types.ReplyKeyboardMarkup()
    markup.row('–ù–∞—á–∞—Ç—å –∏–≥—Ä—É‚õ≥Ô∏è', '–†–µ–π—Ç–∏–Ω–≥üìä')
    markup.row('–î–æ—Å—Ç—É–ø–Ω—ã–µ –∏–≥—Ä—ãüì≤', '–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é‚úÖ')
    bot.send_message(message.from_user.id, '–¢–∏–ø–æ –æ–ø–∏—Å–∞–Ω–∏–µ –∏–≥—Ä—ã',
                     reply_markup=markup)


@bot.message_handler(func=lambda message: message.text == '–ù–∞—á–∞—Ç—å –∏–≥—Ä—É‚õ≥Ô∏è')
def start_game(message: types.Message):
    my_log_info(message.from_user, '–Ω–∞—á–∞–ª–∞ –∏–≥—Ä—É')
    user = db_access.get_user(message.from_user.id)
    my_log_info(message.from_user, '–ø–æ–∏—Å–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–¥')
    if user is None:
        my_log_info(message.from_user, '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω')
        db_access.create_user(message.from_user, datetime.now())
        my_log_info(message.from_user, '–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–¥')
        bot.send_message(message.from_user.id, '–¢—ã –≤ –∏–≥—Ä–µ')
    else:
        my_log_info(message.from_user, '–Ω–∞–π–¥–µ–Ω –≤ –±–¥')
        bot.send_message(message.from_user.id, '–¢—ã —É–∂–µ –≤ –∏–≥—Ä–µ ' + user.user_name)
        level = db_access.get_level(message.from_user.id)
        bot.send_message(message.from_user.id, '–¢–≤–æ–π —É—Ä–æ–≤–µ–Ω—å: ' + str(level))


bot.polling(True)
